set nocompatible
filetype off

set runtimepath=$HOME/Code/dotfiles/vim,$VIMRUNTIME

filetype plugin indent on

set shell=bash\ --login

let g:gitgutter_sign_column_always = 1
let g:gitgutter_eager = 0

let g:vim_json_syntax_conceal = 0

let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']

map <Leader>j !python -m json.tool

colorscheme wombat
set go-=T

set splitright

set visualbell
set t_vb=
syntax on
set ruler
set showcmd

set backupdir=~/.vim/backup
set directory=~/.vim/tmp
set nobackup
set nowritebackup

set timeoutlen=1000 ttimeoutlen=10

set tabstop=4
set autoindent
set shiftwidth=4
set expandtab

set foldmethod=indent
set foldnestmax=10
set nofoldenable
set foldlevel=2

set backspace=indent,eol,start  " backspace through everything in insert mode
" set iskeyword-=-

let g:netrw_list_hide='\.pyc$,\.DS_Store$,__pycache__/$,\.ropeproject/$'
set wildignore=*.pyc

" disable middle click
map <MiddleMouse> <Nop>
imap <MiddleMouse> <Nop>

inoremap <C-space> <C-x><C-o>
imap <C-z> <C-y>,

" search results in the middle of the screen
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz

" disable arrow keys
map <up> <nop>
map <down> <nop>
map <left> <nop>
map <right> <nop>

let mapleader = ","
cnoreabbrev W w
cnoreabbrev E e
cnoreabbrev Wq wq
cnoreabbrev vpslit vsplit

autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
autocmd FileType css set omnifunc=csscomplete#CompleteCSS


" highlight and clean up whitespace
highlight ExtraWhitespace ctermbg=red guibg=red
au ColorScheme * highlight ExtraWhitespace guibg=red
au BufEnter * match ExtraWhitespace /\s\+$/
au InsertEnter * match ExtraWhitespace /\s\+\%#\@<!$/
au InsertLeave * match ExtraWhiteSpace /\s\+$/

autocmd BufNewFile,BufRead *.less set filetype=less
autocmd BufNewFile,BufRead *.json set filetype=javascript
autocmd BufNewFile,BufRead *.md set filetype=markdown

" Use formatprg when available
let g:neoformat_try_formatprg = 1

" show line number and relative line number on command mode
set relativenumber
set number
" autocmd InsertEnter * :set number
"autocmd InsertLeave * :set relativenumber

if has("gui_running")
    set guifont=M+_1m_light:h16
    " python line length
    autocmd FileType python,javascript setlocal colorcolumn=80
    hi ColorColumn ctermbg=lightgrey guibg=#474747

    highlight SpellBad term=underline gui=undercurl guisp=Orange
endif

hi Search guibg=#85C6EC guifg=#FFFFFF
set hlsearch
nnoremap <esc><esc> :silent! nohls<cr>

ab pdb import pdb; pdb.set_trace()
ab clog console.log(
ab dbg debugger;

" vim-airline
set laststatus=2
let g:airline_theme='wombat'

" ale
let g:ale_lint_on_save = 1
let g:ale_lint_on_text_changed = 0
let g:ale_sign_column_always = 1

highlight ALEErrorSign ctermfg=124 guibg=#970A0F
highlight ALEWarningSign ctermfg=31 guibg=#FFE161 guifg=#E5786D

" Custom linting symbols
let g:ale_sign_error = '·'
let g:ale_sign_warning = '·'

let g:ale_linters = {
            \'javascript': ['eslint'],
            \'python': ['flake8'],
            \'html': [],
            \}

" Prettier options to match default ones
let g:prettier#config#bracket_spacing = 'true'
let g:prettier#config#jsx_bracket_same_line = 'false'

" python-mode
" let ale do its job
let g:pymode_lint = 0
let g:pymode_rope_goto_definition_cmd = 'vnew'
" prevent to open the preview window on autocomplete
set completeopt=menu

set secure
