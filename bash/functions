function mkpdir {
    mkdir $1; touch $1/__init__.py
}

function todo () {
    echo "- [ ] $1" >> TODO.md
}

# instead of doing a rm, just move the files to .Trash
function rm () {
    local path
    for path in "$@"; do
        # ignore any arguments
        if [[ "$path" = -* ]]; then :
        else
            local dst=${path##*/}
            # append the time if necessary
            while [ -e ~/.Trash/"$dst" ]; do
                dst="$dst "$(date +%H-%M-%S)
            done
            mv "$path" ~/.Trash/"$dst"
        fi
    done
}

function server {
    if [[ "$2" == "-s" ]];then
        python -m SimpleHTTPServer $1 > /dev/null 2>&1
    else
        python -m SimpleHTTPServer $1
    fi
}

function gmatch {
    mvim +/"$1" -p $(git grep -l "$1")
}

[[ -s "$HOME/Code/vasy/vasy-function.sh" ]] && source $HOME/Code/vasy/vasy-function.sh
[[ -s "$HOME/Code/vasy/vasy-completion.sh" ]] && source $HOME/Code/vasy/vasy-completion.sh


function indexjs {
     FOLDER=$1
     if [[ -z "$FOLDER" ]]; then
        FOLDER="."
     fi
     (cd $FOLDER && echo -e "$(ls -1 *.js | grep -v "index.js" | sed -e "s/\(.*\)\.js/import \1 from '.\/\1';/g")\n\nexport {\n$(ls -1 *.js | grep -v "index.js" | sed -e "s/\(.*\)\.js/  \1,/g")\n};")
}

function add-svg {
    svgr --template .svgr-template.js --tab-width 2 --no-dimensions $1
}

function t {
    TMUXP="$HOME/.tmuxp"
    if git rev-parse --is-inside-work-tree > /dev/null; then
        PARENT="$(git root)"
    else
        PARENT="$(pwd)"
    fi
    CONF="$PARENT/tmuxp.yaml"
    SESSION_NAME="$(basename $PARENT)"
    if [[ -e "$1" ]]; then
        tmuxp load $1
    elif [[ -e "$CONF" ]]; then
        tmuxp load $CONF
    elif [[ -e "$TMUXP/$SESSION_NAME.yaml" ]]; then
        tmuxp load $SESSION_NAME
    else
        EXISTS=$(tmux ls | cut -d ":" -f 1 | grep "${SESSION_NAME}$")
        if [[ -z "$EXISTS" ]]; then
            tmux new -s "$SESSION_NAME"
        else
            tmux attach -t "$SESSION_NAME"
        fi

    fi
}

function gpretty {
    git show --pretty --name-only HEAD | grep ".*\.js$" | xargs -L 1 prettier --write
}

function resetdb {
    dropdb $1 && createdb $1
}

function gravatar {
    HASH_EMAIL=$(md5 -q -s "$1")
    echo "https://secure.gravatar.com/avatar/$HASH_EMAIL?size=$2"
}
