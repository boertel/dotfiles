#!/bin/bash

if [[ $# == 0 ]]; then
    echo "usage: vimpack action [..args]"
    echo "supported actions:"
    echo "  add     user_name/repo_name"
    echo "  rm      repo_name"
    echo "  update  repo_name"
    echo "  ls      repo_name"
    echo "  path"
    echo "  init"
    exit 1
fi


GITROOT="$(git rev-parse --show-toplevel)"
PACK_PATH="vim/pack/boertel/start"

ACTION=$1
shift

add () {
    if [[ -n "$1" ]]; then
        REPO=$1
        REPO_NAME=$(echo "$REPO" | cut -d "/" -f 2-)
        cd "$GITROOT" && git submodule add "git@github.com:$REPO.git" "$PACK_PATH/$REPO_NAME" --depth=1 ${@:2}
    else
        echo "add <username>/<repo>"
        exit 1
    fi
}

remove() {
    if [[ -n "$1" ]]; then
        REPO_NAME="$1"
        REPO_PATH="$PACK_PATH/$REPO_NAME"
        git submodule deinit -f "$REPO_PATH"
        git rm -f "$REPO_PATH"
        rm -Rf "$GITROOT/.git/modules/$REPO_PATH"
    else
        echo "rm <repo>"
        exit 1
    fi
}

update() {
    if [[ -n "$1" ]]; then
        REPO_NAME=$1
        REPO_PATH="$GITROOT/$PACK_PATH/$REPO_NAME"
        cd "$REPO_PATH" && git pull
        cd "$REPO_PATH" && git tag --sort v:refname
        echo "choose tag [<enter> to keep current HEAD]"
        read -r TAG
        if [[ -z "$TAG" ]]; then
            cd "$REPO_PATH" && git checkout "$TAG"
        fi
    else
        echo "rm <repo>"
        exit 1
    fi
}

list() {
    REPO_NAME=$1
    ls "$GITROOT/$PACK_PATH/$REPO_NAME"
}

case "$ACTION" in
    "add")
        add "$@"
        ;;

    "rm")
        remove $@
        ;;

    "update")
        update $@
        ;;

    "init")
        git submodule init
        git submodule update
        ;;

    "ls")
        list $@
        ;;

    "path")
        echo "$PACK_PATH/$1"
        ;;
esac
